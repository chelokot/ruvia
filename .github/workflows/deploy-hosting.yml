name: Deploy Firebase (Hosting + Functions)

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: ruvia-b758a
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci

      - name: Build web
        run: npm run build:web

      - name: Install backend dependencies
        run: npm ci --prefix backend

      - name: Build backend (TypeScript)
        run: npm run build --prefix backend

      - name: Install Firebase CLI
        run: npm i -g firebase-tools

      - name: Authenticate with service account
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          echo "$FIREBASE_SERVICE_ACCOUNT" > "$RUNNER_TEMP/gcp-key.json"
          echo "GOOGLE_APPLICATION_CREDENTIALS=$RUNNER_TEMP/gcp-key.json" >> $GITHUB_ENV

      - name: Write backend env file
        env:
          FAL_KEY: ${{ secrets.FAL_KEY }}
          ANDROID_PACKAGE_NAME: ${{ secrets.ANDROID_PACKAGE_NAME }}
        run: |
          mkdir -p backend
          {
            echo "FAL_KEY=${FAL_KEY}"
            echo "ANDROID_PACKAGE_NAME=${ANDROID_PACKAGE_NAME}"
          } > backend/.env

      - name: Deploy Hosting + Functions (web + api targets)
        run: firebase deploy --only hosting:web,hosting:api,functions --project $PROJECT_ID --force

      # --- Android AAB artifact build via EAS (local) ---
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install EAS CLI
        run: npm i -g eas-cli

      - name: Write Android keystore
        env:
          EXPO_ANDROID_KEYSTORE_BASE64: ${{ secrets.EXPO_ANDROID_KEYSTORE_BASE64 }}
        run: |
          if [ -n "${EXPO_ANDROID_KEYSTORE_BASE64}" ]; then
            echo "$EXPO_ANDROID_KEYSTORE_BASE64" | base64 -d > android_keystore.jks
          fi

      - name: Write EAS credentials.json
        env:
          EXPO_ANDROID_KEYSTORE_PASSWORD: ${{ secrets.EXPO_ANDROID_KEYSTORE_PASSWORD }}
          EXPO_ANDROID_KEY_ALIAS: ${{ secrets.EXPO_ANDROID_KEY_ALIAS }}
          EXPO_ANDROID_KEY_PASSWORD: ${{ secrets.EXPO_ANDROID_KEY_PASSWORD }}
        run: |
          cat > credentials.json <<JSON
          {
            "android": {
              "keystore": {
                "keystorePath": "android_keystore.jks",
                "keystorePassword": "${EXPO_ANDROID_KEYSTORE_PASSWORD}",
                "keyAlias": "${EXPO_ANDROID_KEY_ALIAS}",
                "keyPassword": "${EXPO_ANDROID_KEY_PASSWORD}"
              }
            }
          }
          JSON

      - name: Build Android AAB (EAS local)
        env:
          EAS_NO_VCS: 1
        run: |
          mkdir -p artifacts
          eas build --platform android --profile production --local --non-interactive --output ./artifacts/app.aab

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-production-aab
          path: artifacts/app.aab
          if-no-files-found: error
