name: Deploy Firebase (Hosting + Functions)

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: ruvia-b758a
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci

      - name: Build web
        run: npm run build:web

      - name: Install backend dependencies
        run: npm ci --prefix backend

      - name: Build backend (TypeScript)
        run: npm run build --prefix backend

      - name: Install Firebase CLI
        run: npm i -g firebase-tools

      - name: Authenticate with service account
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          echo "$FIREBASE_SERVICE_ACCOUNT" > "$RUNNER_TEMP/gcp-key.json"
          echo "GOOGLE_APPLICATION_CREDENTIALS=$RUNNER_TEMP/gcp-key.json" >> $GITHUB_ENV

      - name: Write backend env file
        env:
          FAL_KEY: ${{ secrets.FAL_KEY }}
          ANDROID_PACKAGE_NAME: ${{ secrets.ANDROID_PACKAGE_NAME }}
        run: |
          mkdir -p backend
          {
            echo "FAL_KEY=${FAL_KEY}"
            echo "ANDROID_PACKAGE_NAME=${ANDROID_PACKAGE_NAME}"
          } > backend/.env

      - name: Deploy Hosting + Functions (web + api targets)
        run: firebase deploy --only hosting:web,hosting:api,functions --project $PROJECT_ID --force

      # --- Android AAB artifact build via EAS (cloud) ---
      - name: Install EAS CLI
        run: npm i -g eas-cli

      - name: Login to Expo (EAS)
        env:
          EXPO_USERNAME: ${{ secrets.EXPO_USERNAME }}
          EXPO_PASSWORD: ${{ secrets.EXPO_PASSWORD }}
        run: |
          if [ -z "$EXPO_USERNAME" ] || [ -z "$EXPO_PASSWORD" ]; then
            echo "EXPO_USERNAME/EXPO_PASSWORD not set; skipping Expo login" && exit 1
          fi
          npx expo login -u "$EXPO_USERNAME" -p "$EXPO_PASSWORD" --non-interactive

      - name: Start EAS cloud build (Android AAB)
        run: |
          # Ensure managed workflow by removing native Android dir from the tarball
          rm -rf android
          mkdir -p artifacts
          eas build --platform android --profile production --non-interactive --json > build.json
          cat build.json

      - name: Download AAB artifact
        run: |
          ARTIFACT_URL=$(node -e "const fs=require('fs'); const j=JSON.parse(fs.readFileSync('build.json','utf8')); const u=(Array.isArray(j)?j[0]:j).artifacts?.buildUrl || (Array.isArray(j)?j[0]:j).artifacts?.url || ''; if(!u){process.exit(2)} console.log(u)")
          echo "Artifact: $ARTIFACT_URL"
          curl -L "$ARTIFACT_URL" -o artifacts/app.aab

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-production-aab
          path: artifacts/app.aab
          if-no-files-found: error
